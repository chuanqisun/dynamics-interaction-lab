(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{30:function(e,r,n){"use strict";e.exports=n(31)},31:function(e,r,n){"use strict";
/** @license React v16.6.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var t=n(32),o="function"==typeof Symbol&&Symbol.for,a=o?Symbol.for("react.element"):60103,l=o?Symbol.for("react.portal"):60106,c=o?Symbol.for("react.fragment"):60107,i=o?Symbol.for("react.strict_mode"):60108,u=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,p=o?Symbol.for("react.concurrent_mode"):60111,d=o?Symbol.for("react.forward_ref"):60112,y=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,v=o?Symbol.for("react.lazy"):60116,b="function"==typeof Symbol&&Symbol.iterator;function h(e){for(var r=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=0;t<r;t++)n+="&args[]="+encodeURIComponent(arguments[t+1]);!function(e,r,n,t,o,a,l,c){if(!e){if(e=void 0,void 0===r)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var i=[n,t,o,a,l,c],u=0;(e=Error(r.replace(/%s/g,function(){return i[u++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function x(e,r,n){this.props=e,this.context=r,this.refs=w,this.updater=n||g}function k(){}function j(e,r,n){this.props=e,this.context=r,this.refs=w,this.updater=n||g}x.prototype.isReactComponent={},x.prototype.setState=function(e,r){"object"!=typeof e&&"function"!=typeof e&&null!=e&&h("85"),this.updater.enqueueSetState(this,e,r,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=x.prototype;var _=j.prototype=new k;_.constructor=j,t(_,x.prototype),_.isPureReactComponent=!0;var S={current:null,currentDispatcher:null},E=Object.prototype.hasOwnProperty,O={key:!0,ref:!0,__self:!0,__source:!0};function P(e,r,n){var t=void 0,o={},l=null,c=null;if(null!=r)for(t in void 0!==r.ref&&(c=r.ref),void 0!==r.key&&(l=""+r.key),r)E.call(r,t)&&!O.hasOwnProperty(t)&&(o[t]=r[t]);var i=arguments.length-2;if(1===i)o.children=n;else if(1<i){for(var u=Array(i),s=0;s<i;s++)u[s]=arguments[s+2];o.children=u}if(e&&e.defaultProps)for(t in i=e.defaultProps)void 0===o[t]&&(o[t]=i[t]);return{$$typeof:a,type:e,key:l,ref:c,props:o,_owner:S.current}}function N(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var $=/\/+/g,q=[];function z(e,r,n,t){if(q.length){var o=q.pop();return o.result=e,o.keyPrefix=r,o.func=n,o.context=t,o.count=0,o}return{result:e,keyPrefix:r,func:n,context:t,count:0}}function C(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>q.length&&q.push(e)}function T(e,r,n){return null==e?0:function e(r,n,t,o){var c=typeof r;"undefined"!==c&&"boolean"!==c||(r=null);var i=!1;if(null===r)i=!0;else switch(c){case"string":case"number":i=!0;break;case"object":switch(r.$$typeof){case a:case l:i=!0}}if(i)return t(o,r,""===n?"."+R(r,0):n),1;if(i=0,n=""===n?".":n+":",Array.isArray(r))for(var u=0;u<r.length;u++){var s=n+R(c=r[u],u);i+=e(c,s,t,o)}else if(s=null===r||"object"!=typeof r?null:"function"==typeof(s=b&&r[b]||r["@@iterator"])?s:null,"function"==typeof s)for(r=s.call(r),u=0;!(c=r.next()).done;)i+=e(c=c.value,s=n+R(c,u++),t,o);else"object"===c&&h("31","[object Object]"==(t=""+r)?"object with keys {"+Object.keys(r).join(", ")+"}":t,"");return i}(e,"",r,n)}function R(e,r){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var r={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return r[e]})}(e.key):r.toString(36)}function A(e,r){e.func.call(e.context,r,e.count++)}function I(e,r,n){var t=e.result,o=e.keyPrefix;e=e.func.call(e.context,r,e.count++),Array.isArray(e)?U(e,t,n,function(e){return e}):null!=e&&(N(e)&&(e=function(e,r){return{$$typeof:a,type:e.type,key:r,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||r&&r.key===e.key?"":(""+e.key).replace($,"$&/")+"/")+n)),t.push(e))}function U(e,r,n,t,o){var a="";null!=n&&(a=(""+n).replace($,"$&/")+"/"),T(e,I,r=z(r,a,t,o)),C(r)}var F={Children:{map:function(e,r,n){if(null==e)return e;var t=[];return U(e,t,null,r,n),t},forEach:function(e,r,n){if(null==e)return e;T(e,A,r=z(null,null,r,n)),C(r)},count:function(e){return T(e,function(){return null},null)},toArray:function(e){var r=[];return U(e,r,null,function(e){return e}),r},only:function(e){return N(e)||h("143"),e}},createRef:function(){return{current:null}},Component:x,PureComponent:j,createContext:function(e,r){return void 0===r&&(r=null),(e={$$typeof:f,_calculateChangedBits:r,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:d,render:e}},lazy:function(e){return{$$typeof:v,_ctor:e,_status:-1,_result:null}},memo:function(e,r){return{$$typeof:m,type:e,compare:void 0===r?null:r}},Fragment:c,StrictMode:i,Suspense:y,createElement:P,cloneElement:function(e,r,n){null==e&&h("267",e);var o=void 0,l=t({},e.props),c=e.key,i=e.ref,u=e._owner;if(null!=r){void 0!==r.ref&&(i=r.ref,u=S.current),void 0!==r.key&&(c=""+r.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),r)E.call(r,o)&&!O.hasOwnProperty(o)&&(l[o]=void 0===r[o]&&void 0!==s?s[o]:r[o])}if(1===(o=arguments.length-2))l.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];l.children=s}return{$$typeof:a,type:e.type,key:c,ref:i,props:l,_owner:u}},createFactory:function(e){var r=P.bind(null,e);return r.type=e,r},isValidElement:N,version:"16.6.3",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:S,assign:t}};F.unstable_ConcurrentMode=p,F.unstable_Profiler=u;var M={default:F},D=M&&F||M;e.exports=D.default||D},32:function(e,r,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var t=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var r={},n=0;n<10;n++)r["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(r).map(function(e){return r[e]}).join(""))return!1;var t={};return"abcdefghijklmnopqrst".split("").forEach(function(e){t[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},t)).join("")}catch(e){return!1}}()?Object.assign:function(e,r){for(var n,l,c=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),i=1;i<arguments.length;i++){for(var u in n=Object(arguments[i]))o.call(n,u)&&(c[u]=n[u]);if(t){l=t(n);for(var s=0;s<l.length;s++)a.call(n,l[s])&&(c[l[s]]=n[l[s]])}}return c}},34:function(e,r,n){"use strict";n.d(r,"a",function(){return t});var t=function(e){return e&&(e.contentEditable=!0)&&(e.spellcheck=!1)}},35:function(e,r,n){var t=n(36);"string"==typeof t&&(t=[[e.i,t,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(6)(t,o);t.locals&&(e.exports=t.locals)},36:function(e,r,n){(e.exports=n(5)(!1)).push([e.i,".t-header-48 {\r\n  font: var(--fw-semibold) var(--scale-48)/var(--scale-60) var(--ff-segoe-ui);\r\n  letter-spacing: var(--ls-m-0006);\r\n}\r\n\r\n.t-subheader-34 {\r\n  font: var(--fw-semibold) var(--scale-34)/var(--scale-40) var(--ff-segoe-ui);\r\n  letter-spacing: var(--ls-m-0006);\r\n}\r\n\r\n.t-pageheader-24 {\r\n  font: var(--fw-semibold) var(--scale-24)/var(--scale-28) var(--ff-segoe-ui);\r\n}\r\n\r\n.t-sectiontitle-20 {\r\n  font: var(--fw-semibold) var(--scale-20)/var(--scale-24) var(--ff-segoe-ui);\r\n}\r\n\r\n.t-largebodysb-16 {\r\n  font: var(--fw-semibold) var(--scale-16)/var(--scale-24) var(--ff-segoe-ui);\r\n  letter-spacing: var(--ls-p-0005);\r\n}\r\n\r\n.t-largebody-16 {\r\n  font: var(--fw-normal) var(--scale-16)/var(--scale-24) var(--ff-segoe-ui);\r\n  letter-spacing: var(--ls-p-0005);\r\n}\r\n\r\n.t-cardtitle-14 {\r\n  font: var(--fw-semibold) var(--scale-14)/var(--scale-20) var(--ff-segoe-ui);\r\n  letter-spacing: var(--ls-p-0005);\r\n}\r\n\r\n.t-bodysb-14 {\r\n  font: var(--fw-semibold) var(--scale-14)/var(--scale-20) var(--ff-segoe-ui);\r\n  letter-spacing: var(--ls-p-0005);\r\n}\r\n\r\n.t-body-14 {\r\n  font: var(--fw-normal) var(--scale-14)/var(--scale-20) var(--ff-segoe-ui);\r\n  letter-spacing: var(--ls-p-0005);\r\n}\r\n\r\n.t-capsb-12 {\r\n  font: var(--fw-semibold) var(--scale-12)/var(--scale-16) var(--ff-segoe-ui);\r\n  letter-spacing: var(--ls-p-002);\r\n}\r\n\r\n.t-cap-12 {\r\n  font: var(--fw-normal) var(--scale-12)/var(--scale-16) var(--ff-segoe-ui);\r\n  letter-spacing: var(--ls-p-002);\r\n}\r\n\r\n",""])},49:function(e,r,n){"use strict";n.r(r),n.d(r,"TypographyDemo",function(){return f});var t,o,a=n(30),l=n(27),c=n.n(l),i=n(34),u=(n(35),t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)r.hasOwnProperty(n)&&(e[n]=r[n])})(e,r)},function(e,r){function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}),s=function(e,r){return Object.defineProperty?Object.defineProperty(e,"raw",{value:r}):e.raw=r,e},f=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return u(r,e),r.prototype.render=function(){return a.createElement(a.Fragment,null,a.createElement("section",null,a.createElement("h2",{className:"lab-demo-h2"},"Sample"),a.createElement(y,null,a.createElement(p,{className:"t-header-48"},"The quick brown fox jumps over the lazy dog"),a.createElement(p,{className:"t-subheader-34"},"The quick brown fox jumps over the lazy dog"),a.createElement(p,{className:"t-sectiontitle-20"},"The quick brown fox jumps over the lazy dog"),a.createElement(p,{className:"t-largebodysb-16"},"The quick brown fox jumps over the lazy dog"),a.createElement(p,{className:"t-largebody-16"},"The quick brown fox jumps over the lazy dog"),a.createElement(p,{className:"t-cardtitle-14"},"The quick brown fox jumps over the lazy dog"),a.createElement(p,{className:"t-bodysb-14"},"The quick brown fox jumps over the lazy dog"),a.createElement(p,{className:"t-body-14"},"The quick brown fox jumps over the lazy dog"),a.createElement(p,{className:"t-capsb-12"},"The quick brown fox jumps over the lazy dog"),a.createElement(p,{className:"t-cap-12"},"The quick brown fox jumps over the lazy dog"))))},r}(a.Component),p=function(e){return a.createElement("div",{className:"sample-row",ref:function(r){return d(r,e.className)}},a.createElement("div",{className:"labels"},a.createElement("span",null,e.className),a.createElement("span",{className:"details"})),a.createElement("div",{className:"sample "+e.className,ref:function(e){return Object(i.a)(e)}},e.children))},d=function(e,r){if(e){var n=e.querySelector(".sample"),t=getComputedStyle(n),o=t.fontSize,a=t.lineHeight,l=t.fontWeight,c=t.letterSpacing;e.querySelector(".details").innerHTML=o+" "+a+" "+l+" "+c,e.title="class: "+r+"\nfont-size: "+o+"\nline-height: "+a+"\nfont-weight: "+l+"\nletter-spacing: "+c}},y=c.a.div(o||(o=s(["\n  display: flex;\n  flex-direction: column;\n  \n  .sample-row {\n    display: flex;\n    align-items: center;\n    margin: 4px 0;\n  }\n\n  .labels {\n    flex: 0 0 140px;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .details {\n    font-size: 12px;\n  }\n\n  .sample {\n    flex: 1 1 auto;\n    display: inline-block;\n    box-sizing: border-box;\n    word-break: break-all;\n    background-color: rgba(255,0,0,0.1);\n  }\n"],["\n  display: flex;\n  flex-direction: column;\n  \n  .sample-row {\n    display: flex;\n    align-items: center;\n    margin: 4px 0;\n  }\n\n  .labels {\n    flex: 0 0 140px;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .details {\n    font-size: 12px;\n  }\n\n  .sample {\n    flex: 1 1 auto;\n    display: inline-block;\n    box-sizing: border-box;\n    word-break: break-all;\n    background-color: rgba(255,0,0,0.1);\n  }\n"])));r.default=f}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvUmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL1JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvY29udGVudC1lZGl0YWJsZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3R5cG9ncmFwaHkvdHlwb2dyYXBoeS5jc3M/Y2QxZSIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3R5cG9ncmFwaHkvdHlwb2dyYXBoeS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlcy90eXBvZ3JhcGh5L3R5cG9ncmFwaHkuZGVtby50c3giXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJrIiwibiIsIlN5bWJvbCIsImZvciIsInAiLCJxIiwiciIsInQiLCJ1IiwidiIsInciLCJ4IiwieSIsInoiLCJBIiwiQiIsIkMiLCJpdGVyYXRvciIsIkQiLCJhIiwiYiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImUiLCJjIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZCIsImciLCJoIiwiZiIsIkVycm9yIiwibCIsIm0iLCJyZXBsYWNlIiwibmFtZSIsImZyYW1lc1RvUG9wIiwiYWEiLCJFIiwiaXNNb3VudGVkIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVTZXRTdGF0ZSIsIkYiLCJHIiwidGhpcyIsInByb3BzIiwiY29udGV4dCIsInJlZnMiLCJ1cGRhdGVyIiwiSCIsIkkiLCJwcm90b3R5cGUiLCJpc1JlYWN0Q29tcG9uZW50Iiwic2V0U3RhdGUiLCJmb3JjZVVwZGF0ZSIsIkoiLCJjb25zdHJ1Y3RvciIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiSyIsImN1cnJlbnQiLCJjdXJyZW50RGlzcGF0Y2hlciIsIkwiLCJPYmplY3QiLCJoYXNPd25Qcm9wZXJ0eSIsIk0iLCJrZXkiLCJyZWYiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIk4iLCJjYWxsIiwiY2hpbGRyZW4iLCJBcnJheSIsImRlZmF1bHRQcm9wcyIsIiQkdHlwZW9mIiwidHlwZSIsIl9vd25lciIsIk8iLCJQIiwiUSIsIlIiLCJwb3AiLCJyZXN1bHQiLCJrZXlQcmVmaXgiLCJmdW5jIiwiY291bnQiLCJTIiwicHVzaCIsIlYiLCJUIiwiVSIsImlzQXJyYXkiLCJuZXh0IiwiZG9uZSIsInZhbHVlIiwia2V5cyIsImpvaW4iLCI9IiwiOiIsImVzY2FwZSIsInRvU3RyaW5nIiwiY2EiLCJkYSIsIlciLCJiYSIsIlgiLCJDaGlsZHJlbiIsIm1hcCIsImZvckVhY2giLCJ0b0FycmF5Iiwib25seSIsImNyZWF0ZVJlZiIsIkNvbXBvbmVudCIsIlB1cmVDb21wb25lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX2N1cnJlbnRWYWx1ZSIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiUHJvdmlkZXIiLCJDb25zdW1lciIsIl9jb250ZXh0IiwiZm9yd2FyZFJlZiIsInJlbmRlciIsImxhenkiLCJfY3RvciIsIl9zdGF0dXMiLCJfcmVzdWx0IiwibWVtbyIsImNvbXBhcmUiLCJGcmFnbWVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImNyZWF0ZUVsZW1lbnQiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVGYWN0b3J5IiwiYmluZCIsImlzVmFsaWRFbGVtZW50IiwidmVyc2lvbiIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiUmVhY3RDdXJyZW50T3duZXIiLCJhc3NpZ24iLCJ1bnN0YWJsZV9Db25jdXJyZW50TW9kZSIsInVuc3RhYmxlX1Byb2ZpbGVyIiwiWSIsImRlZmF1bHQiLCJaIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJpIiwiZnJvbUNoYXJDb2RlIiwidGVzdDMiLCJzcGxpdCIsImxldHRlciIsImVyciIsInNob3VsZFVzZU5hdGl2ZSIsInRhcmdldCIsInNvdXJjZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJ2YWwiLCJUeXBlRXJyb3IiLCJ0b09iamVjdCIsInMiLCJfX3dlYnBhY2tfZXhwb3J0c19fIiwiY29udGVudEVkaXRhYmxlIiwic3BlbGxjaGVjayIsImNvbnRlbnQiLCJvcHRpb25zIiwiaG1yIiwidHJhbnNmb3JtIiwiaW5zZXJ0SW50byIsInVuZGVmaW5lZCIsImxvY2FscyIsIlR5cG9ncmFwaHlEZW1vIiwiX3N1cGVyIiwiX19leHRlbmRzIiwiUmVhY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsImNsYXNzTmFtZSIsIlN0eWxlZERpdiIsIlNhbXBsZVJvdyIsInJlZmxlY3RTYW1wbGVUZXh0RGV0YWlscyIsIl91dGlsc19jb250ZW50X2VkaXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJzYW1wbGVFbGVtZW50IiwicXVlcnlTZWxlY3RvciIsIl9hIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImZvbnRTaXplIiwibGluZUhlaWdodCIsImZvbnRXZWlnaHQiLCJsZXR0ZXJTcGFjaW5nIiwiaW5uZXJIVE1MIiwidGl0bGUiLCJzdHlsZWRfY29tcG9uZW50c19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fX2RlZmF1bHQiLCJkaXYiLCJ0ZW1wbGF0ZU9iamVjdF8xIiwiX19tYWtlVGVtcGxhdGVPYmplY3QiXSwibWFwcGluZ3MiOiJ5RkFHQUEsRUFBQUMsUUFBbUJDLEVBQVE7Ozs7Ozs7O0dDTWQsSUFBQUMsRUFBTUQsRUFBUSxJQUFlRSxFQUFBLG1CQUFBQyxlQUFBQyxJQUFBQyxFQUFBSCxFQUFBQyxPQUFB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eEMsR0FBS2pLLEVBQUwsQ0FDQSxJQUFNc0ssRUFBaUJ0SyxFQUFxQnVLLGNBQWMsV0FDcERDLEVBQUFDLGlCQUFBSCxHQUFDSSxFQUFBRixFQUFBRSxTQUFVQyxFQUFBSCxFQUFBRyxXQUFZQyxFQUFBSixFQUFBSSxXQUFZQyxFQUFBTCxFQUFBSyxjQUVqQjdLLEVBQXFCdUssY0FBYyxZQUM1Q08sVUFBZUosRUFBUSxJQUFJQyxFQUFVLElBQUlDLEVBQVUsSUFBSUMsRUFDdEU3SyxFQUFFK0ssTUFBUSxVQUFVZCxFQUFTLGdCQUFnQlMsRUFBUSxrQkFBa0JDLEVBQVUsa0JBQWtCQyxFQUFVLHFCQUFxQkMsSUFHOUhYLEVBQVljLEVBQUFwTCxFQUFPcUwsSUFBR0MsTUFBQUMsRUFBQSwrM0JBNkJiaEMsRUFBQSIsImZpbGUiOiI1LjkzOWIyOTlmNzI0NDcwOWQ3NzA1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjYuMVxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGs9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSx5PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHo9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsQT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOlxuNjAxMTUsQj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LEM9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGFhKGEsYixlLGMsZCxnLGgsZil7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGw9W2UsYyxkLGcsaCxmXSxtPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4gbFttKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24gRChhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGU9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MDtjPGI7YysrKWUrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO2FhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsZSl9dmFyIEU9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEY9e307XG5mdW5jdGlvbiBHKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUY7dGhpcy51cGRhdGVyPWV8fEV9Ry5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtHLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/RChcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0cucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEgoKXt9SC5wcm90b3R5cGU9Ry5wcm90b3R5cGU7ZnVuY3Rpb24gSShhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1GO3RoaXMudXBkYXRlcj1lfHxFfXZhciBKPUkucHJvdG90eXBlPW5ldyBIO1xuSi5jb25zdHJ1Y3Rvcj1JO2soSixHLnByb3RvdHlwZSk7Si5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgSz17Y3VycmVudDpudWxsLGN1cnJlbnREaXNwYXRjaGVyOm51bGx9LEw9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxNPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBOKGEsYixlKXt2YXIgYz12b2lkIDAsZD17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilMLmNhbGwoYixjKSYmIU0uaGFzT3duUHJvcGVydHkoYykmJihkW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGYpe2Zvcih2YXIgbD1BcnJheShmKSxtPTA7bTxmO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49bH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZFtjXSYmKGRbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmQsX293bmVyOksuY3VycmVudH19XG5mdW5jdGlvbiBiYShhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBQPS9cXC8rL2csUT1bXTtmdW5jdGlvbiBSKGEsYixlLGMpe2lmKFEubGVuZ3RoKXt2YXIgZD1RLnBvcCgpO2QucmVzdWx0PWE7ZC5rZXlQcmVmaXg9YjtkLmZ1bmM9ZTtkLmNvbnRleHQ9YztkLmNvdW50PTA7cmV0dXJuIGR9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZSxjb250ZXh0OmMsY291bnQ6MH19XG5mdW5jdGlvbiBTKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+US5sZW5ndGgmJlEucHVzaChhKX1cbmZ1bmN0aW9uIFQoYSxiLGUsYyl7dmFyIGQ9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWR8fFwiYm9vbGVhblwiPT09ZClhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChkKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGUoYyxhLFwiXCI9PT1iP1wiLlwiK1UoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZD1hW2hdO3ZhciBmPWIrVShkLGgpO2crPVQoZCxmLGUsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1DJiZhW0NdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGg9XG4wOyEoZD1hLm5leHQoKSkuZG9uZTspZD1kLnZhbHVlLGY9YitVKGQsaCsrKSxnKz1UKGQsZixlLGMpO2Vsc2VcIm9iamVjdFwiPT09ZCYmKGU9XCJcIithLEQoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1lP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmUsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFYoYSxiLGUpe3JldHVybiBudWxsPT1hPzA6VChhLFwiXCIsYixlKX1mdW5jdGlvbiBVKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBjYShhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBkYShhLGIsZSl7dmFyIGM9YS5yZXN1bHQsZD1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9XKGEsYyxlLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE8oYSkmJihhPWJhKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrZSkpLGMucHVzaChhKSl9ZnVuY3Rpb24gVyhhLGIsZSxjLGQpe3ZhciBnPVwiXCI7bnVsbCE9ZSYmKGc9KFwiXCIrZSkucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKTtiPVIoYixnLGMsZCk7VihhLGRhLGIpO1MoYil9XG52YXIgWD17Q2hpbGRyZW46e21hcDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgYz1bXTtXKGEsYyxudWxsLGIsZSk7cmV0dXJuIGN9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGUpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1SKG51bGwsbnVsbCxiLGUpO1YoYSxjYSxiKTtTKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVihhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1coYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtPKGEpP3ZvaWQgMDpEKFwiMTQzXCIpO3JldHVybiBhfX0sY3JlYXRlUmVmOmZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19LENvbXBvbmVudDpHLFB1cmVDb21wb25lbnQ6SSxjcmVhdGVDb250ZXh0OmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6Yixcbl9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6dixfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfSxmb3J3YXJkUmVmOmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp5LHJlbmRlcjphfX0sbGF6eTpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6QixfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX0sbWVtbzpmdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjpBLHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX0sRnJhZ21lbnQ6cixTdHJpY3RNb2RlOnQsU3VzcGVuc2U6eixjcmVhdGVFbGVtZW50Ok4sY2xvbmVFbGVtZW50OmZ1bmN0aW9uKGEsYixlKXtudWxsPT09YXx8dm9pZCAwPT09YT9EKFwiMjY3XCIsYSk6dm9pZCAwO3ZhciBjPXZvaWQgMCxkPWsoe30sYS5wcm9wcyksZz1hLmtleSxoPWEucmVmLGY9YS5fb3duZXI7XG5pZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYsZj1LLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KTt2YXIgbD12b2lkIDA7YS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzJiYobD1hLnR5cGUuZGVmYXVsdFByb3BzKTtmb3IoYyBpbiBiKUwuY2FsbChiLGMpJiYhTS5oYXNPd25Qcm9wZXJ0eShjKSYmKGRbY109dm9pZCAwPT09YltjXSYmdm9pZCAwIT09bD9sW2NdOmJbY10pfWM9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1jKWQuY2hpbGRyZW49ZTtlbHNlIGlmKDE8Yyl7bD1BcnJheShjKTtmb3IodmFyIG09MDttPGM7bSsrKWxbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1sfXJldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpnLHJlZjpoLHByb3BzOmQsX293bmVyOmZ9fSxjcmVhdGVGYWN0b3J5OmZ1bmN0aW9uKGEpe3ZhciBiPU4uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifSxpc1ZhbGlkRWxlbWVudDpPLHZlcnNpb246XCIxNi42LjNcIixcbl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntSZWFjdEN1cnJlbnRPd25lcjpLLGFzc2lnbjprfX07WC51bnN0YWJsZV9Db25jdXJyZW50TW9kZT14O1gudW5zdGFibGVfUHJvZmlsZXI9dTt2YXIgWT17ZGVmYXVsdDpYfSxaPVkmJlh8fFk7bW9kdWxlLmV4cG9ydHM9Wi5kZWZhdWx0fHxaO1xuIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsImV4cG9ydCBjb25zdCBjb250ZW50RWRpdGFibGUgPSAoZTphbnkpID0+IGUgJiYgKGUuY29udGVudEVkaXRhYmxlPXRydWUpICYmIChlLnNwZWxsY2hlY2s9ZmFsc2UpOyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuL3R5cG9ncmFwaHkuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuL3R5cG9ncmFwaHkuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi90eXBvZ3JhcGh5LmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnQtaGVhZGVyLTQ4IHtcXHJcXG4gIGZvbnQ6IHZhcigtLWZ3LXNlbWlib2xkKSB2YXIoLS1zY2FsZS00OCkvdmFyKC0tc2NhbGUtNjApIHZhcigtLWZmLXNlZ29lLXVpKTtcXHJcXG4gIGxldHRlci1zcGFjaW5nOiB2YXIoLS1scy1tLTAwMDYpO1xcclxcbn1cXHJcXG5cXHJcXG4udC1zdWJoZWFkZXItMzQge1xcclxcbiAgZm9udDogdmFyKC0tZnctc2VtaWJvbGQpIHZhcigtLXNjYWxlLTM0KS92YXIoLS1zY2FsZS00MCkgdmFyKC0tZmYtc2Vnb2UtdWkpO1xcclxcbiAgbGV0dGVyLXNwYWNpbmc6IHZhcigtLWxzLW0tMDAwNik7XFxyXFxufVxcclxcblxcclxcbi50LXBhZ2VoZWFkZXItMjQge1xcclxcbiAgZm9udDogdmFyKC0tZnctc2VtaWJvbGQpIHZhcigtLXNjYWxlLTI0KS92YXIoLS1zY2FsZS0yOCkgdmFyKC0tZmYtc2Vnb2UtdWkpO1xcclxcbn1cXHJcXG5cXHJcXG4udC1zZWN0aW9udGl0bGUtMjAge1xcclxcbiAgZm9udDogdmFyKC0tZnctc2VtaWJvbGQpIHZhcigtLXNjYWxlLTIwKS92YXIoLS1zY2FsZS0yNCkgdmFyKC0tZmYtc2Vnb2UtdWkpO1xcclxcbn1cXHJcXG5cXHJcXG4udC1sYXJnZWJvZHlzYi0xNiB7XFxyXFxuICBmb250OiB2YXIoLS1mdy1zZW1pYm9sZCkgdmFyKC0tc2NhbGUtMTYpL3ZhcigtLXNjYWxlLTI0KSB2YXIoLS1mZi1zZWdvZS11aSk7XFxyXFxuICBsZXR0ZXItc3BhY2luZzogdmFyKC0tbHMtcC0wMDA1KTtcXHJcXG59XFxyXFxuXFxyXFxuLnQtbGFyZ2Vib2R5LTE2IHtcXHJcXG4gIGZvbnQ6IHZhcigtLWZ3LW5vcm1hbCkgdmFyKC0tc2NhbGUtMTYpL3ZhcigtLXNjYWxlLTI0KSB2YXIoLS1mZi1zZWdvZS11aSk7XFxyXFxuICBsZXR0ZXItc3BhY2luZzogdmFyKC0tbHMtcC0wMDA1KTtcXHJcXG59XFxyXFxuXFxyXFxuLnQtY2FyZHRpdGxlLTE0IHtcXHJcXG4gIGZvbnQ6IHZhcigtLWZ3LXNlbWlib2xkKSB2YXIoLS1zY2FsZS0xNCkvdmFyKC0tc2NhbGUtMjApIHZhcigtLWZmLXNlZ29lLXVpKTtcXHJcXG4gIGxldHRlci1zcGFjaW5nOiB2YXIoLS1scy1wLTAwMDUpO1xcclxcbn1cXHJcXG5cXHJcXG4udC1ib2R5c2ItMTQge1xcclxcbiAgZm9udDogdmFyKC0tZnctc2VtaWJvbGQpIHZhcigtLXNjYWxlLTE0KS92YXIoLS1zY2FsZS0yMCkgdmFyKC0tZmYtc2Vnb2UtdWkpO1xcclxcbiAgbGV0dGVyLXNwYWNpbmc6IHZhcigtLWxzLXAtMDAwNSk7XFxyXFxufVxcclxcblxcclxcbi50LWJvZHktMTQge1xcclxcbiAgZm9udDogdmFyKC0tZnctbm9ybWFsKSB2YXIoLS1zY2FsZS0xNCkvdmFyKC0tc2NhbGUtMjApIHZhcigtLWZmLXNlZ29lLXVpKTtcXHJcXG4gIGxldHRlci1zcGFjaW5nOiB2YXIoLS1scy1wLTAwMDUpO1xcclxcbn1cXHJcXG5cXHJcXG4udC1jYXBzYi0xMiB7XFxyXFxuICBmb250OiB2YXIoLS1mdy1zZW1pYm9sZCkgdmFyKC0tc2NhbGUtMTIpL3ZhcigtLXNjYWxlLTE2KSB2YXIoLS1mZi1zZWdvZS11aSk7XFxyXFxuICBsZXR0ZXItc3BhY2luZzogdmFyKC0tbHMtcC0wMDIpO1xcclxcbn1cXHJcXG5cXHJcXG4udC1jYXAtMTIge1xcclxcbiAgZm9udDogdmFyKC0tZnctbm9ybWFsKSB2YXIoLS1zY2FsZS0xMikvdmFyKC0tc2NhbGUtMTYpIHZhcigtLWZmLXNlZ29lLXVpKTtcXHJcXG4gIGxldHRlci1zcGFjaW5nOiB2YXIoLS1scy1wLTAwMik7XFxyXFxufVxcclxcblxcclxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ1JlYWN0JztcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwic3R5bGVkLWNvbXBvbmVudHNcIjtcclxuaW1wb3J0IHtjb250ZW50RWRpdGFibGV9IGZyb20gJy4uLy4uL3V0aWxzL2NvbnRlbnQtZWRpdGFibGUnO1xyXG5pbXBvcnQgJy4vdHlwb2dyYXBoeS5jc3MnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFR5cG9ncmFwaHlEZW1vIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PGFueSwgYW55PiB7XHJcbiAgcmVuZGVyKCkge1xyXG4gICAgcmV0dXJuIDxSZWFjdC5GcmFnbWVudD5cclxuICAgIDxzZWN0aW9uPlxyXG4gICAgICA8aDIgY2xhc3NOYW1lPVwibGFiLWRlbW8taDJcIj5TYW1wbGU8L2gyPlxyXG4gICAgICA8U3R5bGVkRGl2PlxyXG4gICAgICAgIDxTYW1wbGVSb3cgY2xhc3NOYW1lPVwidC1oZWFkZXItNDhcIj5UaGUgcXVpY2sgYnJvd24gZm94IGp1bXBzIG92ZXIgdGhlIGxhenkgZG9nPC9TYW1wbGVSb3c+XHJcbiAgICAgICAgPFNhbXBsZVJvdyBjbGFzc05hbWU9XCJ0LXN1YmhlYWRlci0zNFwiPlRoZSBxdWljayBicm93biBmb3gganVtcHMgb3ZlciB0aGUgbGF6eSBkb2c8L1NhbXBsZVJvdz5cclxuICAgICAgICA8U2FtcGxlUm93IGNsYXNzTmFtZT1cInQtc2VjdGlvbnRpdGxlLTIwXCI+VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wcyBvdmVyIHRoZSBsYXp5IGRvZzwvU2FtcGxlUm93PlxyXG4gICAgICAgIDxTYW1wbGVSb3cgY2xhc3NOYW1lPVwidC1sYXJnZWJvZHlzYi0xNlwiPlRoZSBxdWljayBicm93biBmb3gganVtcHMgb3ZlciB0aGUgbGF6eSBkb2c8L1NhbXBsZVJvdz5cclxuICAgICAgICA8U2FtcGxlUm93IGNsYXNzTmFtZT1cInQtbGFyZ2Vib2R5LTE2XCI+VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wcyBvdmVyIHRoZSBsYXp5IGRvZzwvU2FtcGxlUm93PlxyXG4gICAgICAgIDxTYW1wbGVSb3cgY2xhc3NOYW1lPVwidC1jYXJkdGl0bGUtMTRcIj5UaGUgcXVpY2sgYnJvd24gZm94IGp1bXBzIG92ZXIgdGhlIGxhenkgZG9nPC9TYW1wbGVSb3c+XHJcbiAgICAgICAgPFNhbXBsZVJvdyBjbGFzc05hbWU9XCJ0LWJvZHlzYi0xNFwiPlRoZSBxdWljayBicm93biBmb3gganVtcHMgb3ZlciB0aGUgbGF6eSBkb2c8L1NhbXBsZVJvdz5cclxuICAgICAgICA8U2FtcGxlUm93IGNsYXNzTmFtZT1cInQtYm9keS0xNFwiPlRoZSBxdWljayBicm93biBmb3gganVtcHMgb3ZlciB0aGUgbGF6eSBkb2c8L1NhbXBsZVJvdz5cclxuICAgICAgICA8U2FtcGxlUm93IGNsYXNzTmFtZT1cInQtY2Fwc2ItMTJcIj5UaGUgcXVpY2sgYnJvd24gZm94IGp1bXBzIG92ZXIgdGhlIGxhenkgZG9nPC9TYW1wbGVSb3c+XHJcbiAgICAgICAgPFNhbXBsZVJvdyBjbGFzc05hbWU9XCJ0LWNhcC0xMlwiPlRoZSBxdWljayBicm93biBmb3gganVtcHMgb3ZlciB0aGUgbGF6eSBkb2c8L1NhbXBsZVJvdz5cclxuICAgICAgPC9TdHlsZWREaXY+XHJcbiAgICA8L3NlY3Rpb24+XHJcbiAgICA8L1JlYWN0LkZyYWdtZW50PlxyXG4gIH1cclxufVxyXG5cclxuY29uc3QgU2FtcGxlUm93ID0gKHByb3BzOiBhbnkpID0+IHtcclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9XCJzYW1wbGUtcm93XCIgcmVmPXtlID0+IHJlZmxlY3RTYW1wbGVUZXh0RGV0YWlscyhlLCBwcm9wcy5jbGFzc05hbWUpfT5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJsYWJlbHNcIj5cclxuICAgICAgICA8c3Bhbj57cHJvcHMuY2xhc3NOYW1lfTwvc3Bhbj5cclxuICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJkZXRhaWxzXCI+PC9zcGFuPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9eydzYW1wbGUgJyArIHByb3BzLmNsYXNzTmFtZX0gcmVmPXtlID0+IGNvbnRlbnRFZGl0YWJsZShlKX0+e3Byb3BzLmNoaWxkcmVufTwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgKVxyXG59XHJcblxyXG5jb25zdCByZWZsZWN0U2FtcGxlVGV4dERldGFpbHMgPSAoZTogYW55LCBjbGFzc05hbWU6IHN0cmluZykgPT4ge1xyXG4gIGlmICghZSkgcmV0dXJuO1xyXG4gIGNvbnN0IHNhbXBsZUVsZW1lbnQgPSAoZSBhcyBIVE1MRGl2RWxlbWVudCkucXVlcnlTZWxlY3RvcignLnNhbXBsZScpISBhcyBIVE1MRGl2RWxlbWVudDtcclxuICBjb25zdCB7Zm9udFNpemUsIGxpbmVIZWlnaHQsIGZvbnRXZWlnaHQsIGxldHRlclNwYWNpbmd9ID0gZ2V0Q29tcHV0ZWRTdHlsZShzYW1wbGVFbGVtZW50KTtcclxuXHJcbiAgY29uc3QgZGV0YWlsc0VsZW1lbnQgPSAoZSBhcyBIVE1MRGl2RWxlbWVudCkucXVlcnlTZWxlY3RvcignLmRldGFpbHMnKSEgYXMgSFRNTERpdkVsZW1lbnQ7XHJcbiAgZGV0YWlsc0VsZW1lbnQuaW5uZXJIVE1MID0gYCR7Zm9udFNpemV9ICR7bGluZUhlaWdodH0gJHtmb250V2VpZ2h0fSAke2xldHRlclNwYWNpbmd9YDtcclxuICBlLnRpdGxlID0gYGNsYXNzOiAke2NsYXNzTmFtZX1cXG5mb250LXNpemU6ICR7Zm9udFNpemV9XFxubGluZS1oZWlnaHQ6ICR7bGluZUhlaWdodH1cXG5mb250LXdlaWdodDogJHtmb250V2VpZ2h0fVxcbmxldHRlci1zcGFjaW5nOiAke2xldHRlclNwYWNpbmd9YDtcclxufVxyXG5cclxuY29uc3QgU3R5bGVkRGl2ID0gc3R5bGVkLmRpdmBcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgXHJcbiAgLnNhbXBsZS1yb3cge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBtYXJnaW46IDRweCAwO1xyXG4gIH1cclxuXHJcbiAgLmxhYmVscyB7XHJcbiAgICBmbGV4OiAwIDAgMTQwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB9XHJcblxyXG4gIC5kZXRhaWxzIHtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICB9XHJcblxyXG4gIC5zYW1wbGUge1xyXG4gICAgZmxleDogMSAxIGF1dG87XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgd29yZC1icmVhazogYnJlYWstYWxsO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMCwwLDAuMSk7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVHlwb2dyYXBoeURlbW87Il0sInNvdXJjZVJvb3QiOiIifQ==