(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{30:function(r,t,e){"use strict";r.exports=e(31)},31:function(r,t,e){"use strict";
/** @license React v16.6.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var n=e(32),o="function"==typeof Symbol&&Symbol.for,a=o?Symbol.for("react.element"):60103,c=o?Symbol.for("react.portal"):60106,i=o?Symbol.for("react.fragment"):60107,l=o?Symbol.for("react.strict_mode"):60108,u=o?Symbol.for("react.profiler"):60114,f=o?Symbol.for("react.provider"):60109,s=o?Symbol.for("react.context"):60110,p=o?Symbol.for("react.concurrent_mode"):60111,d=o?Symbol.for("react.forward_ref"):60112,y=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,g=o?Symbol.for("react.lazy"):60116,b="function"==typeof Symbol&&Symbol.iterator;function v(r){for(var t=arguments.length-1,e="https://reactjs.org/docs/error-decoder.html?invariant="+r,n=0;n<t;n++)e+="&args[]="+encodeURIComponent(arguments[n+1]);!function(r,t,e,n,o,a,c,i){if(!r){if(r=void 0,void 0===t)r=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[e,n,o,a,c,i],u=0;(r=Error(t.replace(/%s/g,function(){return l[u++]}))).name="Invariant Violation"}throw r.framesToPop=1,r}}(!1,"Minified React error #"+r+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",e)}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},k={};function w(r,t,e){this.props=r,this.context=t,this.refs=k,this.updater=e||m}function _(){}function S(r,t,e){this.props=r,this.context=t,this.refs=k,this.updater=e||m}w.prototype.isReactComponent={},w.prototype.setState=function(r,t){"object"!=typeof r&&"function"!=typeof r&&null!=r&&v("85"),this.updater.enqueueSetState(this,r,t,"setState")},w.prototype.forceUpdate=function(r){this.updater.enqueueForceUpdate(this,r,"forceUpdate")},_.prototype=w.prototype;var j=S.prototype=new _;j.constructor=S,n(j,w.prototype),j.isPureReactComponent=!0;var O={current:null,currentDispatcher:null},x=Object.prototype.hasOwnProperty,P={key:!0,ref:!0,__self:!0,__source:!0};function $(r,t,e){var n=void 0,o={},c=null,i=null;if(null!=t)for(n in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(c=""+t.key),t)x.call(t,n)&&!P.hasOwnProperty(n)&&(o[n]=t[n]);var l=arguments.length-2;if(1===l)o.children=e;else if(1<l){for(var u=Array(l),f=0;f<l;f++)u[f]=arguments[f+2];o.children=u}if(r&&r.defaultProps)for(n in l=r.defaultProps)void 0===o[n]&&(o[n]=l[n]);return{$$typeof:a,type:r,key:c,ref:i,props:o,_owner:O.current}}function E(r){return"object"==typeof r&&null!==r&&r.$$typeof===a}var C=/\/+/g,R=[];function A(r,t,e,n){if(R.length){var o=R.pop();return o.result=r,o.keyPrefix=t,o.func=e,o.context=n,o.count=0,o}return{result:r,keyPrefix:t,func:e,context:n,count:0}}function q(r){r.result=null,r.keyPrefix=null,r.func=null,r.context=null,r.count=0,10>R.length&&R.push(r)}function F(r,t,e){return null==r?0:function r(t,e,n,o){var i=typeof t;"undefined"!==i&&"boolean"!==i||(t=null);var l=!1;if(null===t)l=!0;else switch(i){case"string":case"number":l=!0;break;case"object":switch(t.$$typeof){case a:case c:l=!0}}if(l)return n(o,t,""===e?"."+I(t,0):e),1;if(l=0,e=""===e?".":e+":",Array.isArray(t))for(var u=0;u<t.length;u++){var f=e+I(i=t[u],u);l+=r(i,f,n,o)}else if(f=null===t||"object"!=typeof t?null:"function"==typeof(f=b&&t[b]||t["@@iterator"])?f:null,"function"==typeof f)for(t=f.call(t),u=0;!(i=t.next()).done;)l+=r(i=i.value,f=e+I(i,u++),n,o);else"object"===i&&v("31","[object Object]"==(n=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":n,"");return l}(r,"",t,e)}function I(r,t){return"object"==typeof r&&null!==r&&null!=r.key?function(r){var t={"=":"=0",":":"=2"};return"$"+(""+r).replace(/[=:]/g,function(r){return t[r]})}(r.key):t.toString(36)}function N(r,t){r.func.call(r.context,t,r.count++)}function U(r,t,e){var n=r.result,o=r.keyPrefix;r=r.func.call(r.context,t,r.count++),Array.isArray(r)?T(r,n,e,function(r){return r}):null!=r&&(E(r)&&(r=function(r,t){return{$$typeof:a,type:r.type,key:t,ref:r.ref,props:r.props,_owner:r._owner}}(r,o+(!r.key||t&&t.key===r.key?"":(""+r.key).replace(C,"$&/")+"/")+e)),n.push(r))}function T(r,t,e,n,o){var a="";null!=e&&(a=(""+e).replace(C,"$&/")+"/"),F(r,U,t=A(t,a,n,o)),q(t)}var M={Children:{map:function(r,t,e){if(null==r)return r;var n=[];return T(r,n,null,t,e),n},forEach:function(r,t,e){if(null==r)return r;F(r,N,t=A(null,null,t,e)),q(t)},count:function(r){return F(r,function(){return null},null)},toArray:function(r){var t=[];return T(r,t,null,function(r){return r}),t},only:function(r){return E(r)||v("143"),r}},createRef:function(){return{current:null}},Component:w,PureComponent:S,createContext:function(r,t){return void 0===t&&(t=null),(r={$$typeof:s,_calculateChangedBits:t,_currentValue:r,_currentValue2:r,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:f,_context:r},r.Consumer=r},forwardRef:function(r){return{$$typeof:d,render:r}},lazy:function(r){return{$$typeof:g,_ctor:r,_status:-1,_result:null}},memo:function(r,t){return{$$typeof:h,type:r,compare:void 0===t?null:t}},Fragment:i,StrictMode:l,Suspense:y,createElement:$,cloneElement:function(r,t,e){null==r&&v("267",r);var o=void 0,c=n({},r.props),i=r.key,l=r.ref,u=r._owner;if(null!=t){void 0!==t.ref&&(l=t.ref,u=O.current),void 0!==t.key&&(i=""+t.key);var f=void 0;for(o in r.type&&r.type.defaultProps&&(f=r.type.defaultProps),t)x.call(t,o)&&!P.hasOwnProperty(o)&&(c[o]=void 0===t[o]&&void 0!==f?f[o]:t[o])}if(1===(o=arguments.length-2))c.children=e;else if(1<o){f=Array(o);for(var s=0;s<o;s++)f[s]=arguments[s+2];c.children=f}return{$$typeof:a,type:r.type,key:i,ref:l,props:c,_owner:u}},createFactory:function(r){var t=$.bind(null,r);return t.type=r,t},isValidElement:E,version:"16.6.3",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:O,assign:n}};M.unstable_ConcurrentMode=p,M.unstable_Profiler=u;var D={default:M},V=D&&M||D;r.exports=V.default||V},32:function(r,t,e){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var n=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;r.exports=function(){try{if(!Object.assign)return!1;var r=new String("abc");if(r[5]="de","5"===Object.getOwnPropertyNames(r)[0])return!1;for(var t={},e=0;e<10;e++)t["_"+String.fromCharCode(e)]=e;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(r){return t[r]}).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach(function(r){n[r]=r}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(r){return!1}}()?Object.assign:function(r,t){for(var e,c,i=function(r){if(null==r)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(r)}(r),l=1;l<arguments.length;l++){for(var u in e=Object(arguments[l]))o.call(e,u)&&(i[u]=e[u]);if(n){c=n(e);for(var f=0;f<c.length;f++)a.call(e,c[f])&&(i[c[f]]=e[c[f]])}}return i}},43:function(r,t,e){var n=e(44);"string"==typeof n&&(n=[[r.i,n,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};e(6)(n,o);n.locals&&(r.exports=n.locals)},44:function(r,t,e){(r.exports=e(5)(!1)).push([r.i,".tg {\r\n  width: var(--tg-track-width);\r\n  height: var(--tg-track-height);\r\n  margin: 0;\r\n  vertical-align: bottom;\r\n}\r\n\r\n.tg::-ms-check {\r\n  opacity: 0; /* Edge checkbox would leak outside the track by 0.1px */\r\n}\r\n\r\n.tg-label {\r\n  margin-left: calc(var(--tg-track-width) * -1);\r\n  padding-left: calc(var(--tg-track-width) + var(--tg-track-label-gutter));\r\n  height: var(--tg-track-height);\r\n  font: var(--tg-label-font);\r\n  letter-spacing: var(--tg-label-letter-spacing);\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.tg-label::before { /* track */\r\n  background-color: var(--tg-off-track-bg-rest);\r\n  content: '';\r\n  position: absolute;\r\n  width: var(--tg-track-width);\r\n  left: 0;\r\n  height: 100%;\r\n  border: 1px solid var(--tg-off-track-border-rest);\r\n  border-radius: calc(var(--tg-track-height) / 2);\r\n  box-sizing: border-box;\r\n  transition: all var(--tg-transition-duration);\r\n}\r\n\r\n.tg-label:hover::before { /* track */\r\n  border: 1px solid var(--tg-off-track-border-hover);\r\n}\r\n\r\n.tg-label::after { /* knob */\r\n  background-color: var(--tg-off-knob-bg);\r\n  content: '';\r\n  position: absolute;\r\n  width: var(--tg-knob-diameter);\r\n  height: var(--tg-knob-diameter);\r\n  left: var(--tg-track-gutter);\r\n  top: var(--tg-track-gutter);\r\n  border-radius: 50%;\r\n  transition: all var(--tg-transition-duration);\r\n}\r\n\r\n.tg:checked+.tg-label::before { /* track */\r\n  background-color: var(--tg-on-track-bg-rest);\r\n  border-color: var(--tg-on-track-border-rest);\r\n}\r\n\r\n.tg:checked+.tg-label::after { /* knob */\r\n  transform: translateX(var(--tg-knob-translate));\r\n  background-color: var(--tg-on-knob-bg);\r\n}",""])},52:function(r,t,e){"use strict";e.r(t),e.d(t,"ToggleDemo",function(){return c});var n,o=e(30),a=(e(43),n=function(r,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,t){r.__proto__=t}||function(r,t){for(var e in t)t.hasOwnProperty(e)&&(r[e]=t[e])})(r,t)},function(r,t){function e(){this.constructor=r}n(r,t),r.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)}),c=function(r){function t(t){var e=r.call(this,t)||this;return e.onCheck=function(){e.setState({checked:!e.state.checked})},e.state={checked:!1},e}return a(t,r),t.prototype.render=function(){return o.createElement(o.Fragment,null,o.createElement("section",null,o.createElement("h2",null,"Sample"),o.createElement("input",{id:"tg-demo",type:"checkbox",className:"tg",checked:this.state.checked,onChange:this.onCheck}),o.createElement("label",{htmlFor:"tg-demo",className:"tg-label"},this.state.checked?"on":"off")))},t}(o.Component);t.default=c}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,