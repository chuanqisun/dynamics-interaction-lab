(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{30:function(e,n,t){"use strict";e.exports=t(31)},31:function(e,n,t){"use strict";
/** @license React v16.6.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=t(32),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,u=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,c=o?Symbol.for("react.strict_mode"):60108,a=o?Symbol.for("react.profiler"):60114,f=o?Symbol.for("react.provider"):60109,p=o?Symbol.for("react.context"):60110,s=o?Symbol.for("react.concurrent_mode"):60111,y=o?Symbol.for("react.forward_ref"):60112,d=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,h=o?Symbol.for("react.lazy"):60116,b="function"==typeof Symbol&&Symbol.iterator;function v(e){for(var n=arguments.length-1,t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<n;r++)t+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,n,t,r,o,i,u,l){if(!e){if(e=void 0,void 0===n)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[t,r,o,i,u,l],a=0;(e=Error(n.replace(/%s/g,function(){return c[a++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",t)}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},x={};function _(e,n,t){this.props=e,this.context=n,this.refs=x,this.updater=t||g}function w(){}function S(e,n,t){this.props=e,this.context=n,this.refs=x,this.updater=t||g}_.prototype.isReactComponent={},_.prototype.setState=function(e,n){"object"!=typeof e&&"function"!=typeof e&&null!=e&&v("85"),this.updater.enqueueSetState(this,e,n,"setState")},_.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},w.prototype=_.prototype;var j=S.prototype=new w;j.constructor=S,r(j,_.prototype),j.isPureReactComponent=!0;var O={current:null,currentDispatcher:null},k=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function P(e,n,t){var r=void 0,o={},u=null,l=null;if(null!=n)for(r in void 0!==n.ref&&(l=n.ref),void 0!==n.key&&(u=""+n.key),n)k.call(n,r)&&!E.hasOwnProperty(r)&&(o[r]=n[r]);var c=arguments.length-2;if(1===c)o.children=t;else if(1<c){for(var a=Array(c),f=0;f<c;f++)a[f]=arguments[f+2];o.children=a}if(e&&e.defaultProps)for(r in c=e.defaultProps)void 0===o[r]&&(o[r]=c[r]);return{$$typeof:i,type:e,key:u,ref:l,props:o,_owner:O.current}}function $(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var C=/\/+/g,R=[];function V(e,n,t,r){if(R.length){var o=R.pop();return o.result=e,o.keyPrefix=n,o.func=t,o.context=r,o.count=0,o}return{result:e,keyPrefix:n,func:t,context:r,count:0}}function q(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>R.length&&R.push(e)}function A(e,n,t){return null==e?0:function e(n,t,r,o){var l=typeof n;"undefined"!==l&&"boolean"!==l||(n=null);var c=!1;if(null===n)c=!0;else switch(l){case"string":case"number":c=!0;break;case"object":switch(n.$$typeof){case i:case u:c=!0}}if(c)return r(o,n,""===t?"."+F(n,0):t),1;if(c=0,t=""===t?".":t+":",Array.isArray(n))for(var a=0;a<n.length;a++){var f=t+F(l=n[a],a);c+=e(l,f,r,o)}else if(f=null===n||"object"!=typeof n?null:"function"==typeof(f=b&&n[b]||n["@@iterator"])?f:null,"function"==typeof f)for(n=f.call(n),a=0;!(l=n.next()).done;)c+=e(l=l.value,f=t+F(l,a++),r,o);else"object"===l&&v("31","[object Object]"==(r=""+n)?"object with keys {"+Object.keys(n).join(", ")+"}":r,"");return c}(e,"",n,t)}function F(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return n[e]})}(e.key):n.toString(36)}function U(e,n){e.func.call(e.context,n,e.count++)}function I(e,n,t){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,n,e.count++),Array.isArray(e)?M(e,r,t,function(e){return e}):null!=e&&($(e)&&(e=function(e,n){return{$$typeof:i,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||n&&n.key===e.key?"":(""+e.key).replace(C,"$&/")+"/")+t)),r.push(e))}function M(e,n,t,r,o){var i="";null!=t&&(i=(""+t).replace(C,"$&/")+"/"),A(e,I,n=V(n,i,r,o)),q(n)}var N={Children:{map:function(e,n,t){if(null==e)return e;var r=[];return M(e,r,null,n,t),r},forEach:function(e,n,t){if(null==e)return e;A(e,U,n=V(null,null,n,t)),q(n)},count:function(e){return A(e,function(){return null},null)},toArray:function(e){var n=[];return M(e,n,null,function(e){return e}),n},only:function(e){return $(e)||v("143"),e}},createRef:function(){return{current:null}},Component:_,PureComponent:S,createContext:function(e,n){return void 0===n&&(n=null),(e={$$typeof:p,_calculateChangedBits:n,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:f,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:y,render:e}},lazy:function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},memo:function(e,n){return{$$typeof:m,type:e,compare:void 0===n?null:n}},Fragment:l,StrictMode:c,Suspense:d,createElement:P,cloneElement:function(e,n,t){null==e&&v("267",e);var o=void 0,u=r({},e.props),l=e.key,c=e.ref,a=e._owner;if(null!=n){void 0!==n.ref&&(c=n.ref,a=O.current),void 0!==n.key&&(l=""+n.key);var f=void 0;for(o in e.type&&e.type.defaultProps&&(f=e.type.defaultProps),n)k.call(n,o)&&!E.hasOwnProperty(o)&&(u[o]=void 0===n[o]&&void 0!==f?f[o]:n[o])}if(1===(o=arguments.length-2))u.children=t;else if(1<o){f=Array(o);for(var p=0;p<o;p++)f[p]=arguments[p+2];u.children=f}return{$$typeof:i,type:e.type,key:l,ref:c,props:u,_owner:a}},createFactory:function(e){var n=P.bind(null,e);return n.type=e,n},isValidElement:$,version:"16.6.3",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:O,assign:r}};N.unstable_ConcurrentMode=s,N.unstable_Profiler=a;var T={default:N},D=T&&N||T;e.exports=D.default||D},32:function(e,n,t){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var n={},t=0;t<10;t++)n["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(n).map(function(e){return n[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,n){for(var t,u,l=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),c=1;c<arguments.length;c++){for(var a in t=Object(arguments[c]))o.call(t,a)&&(l[a]=t[a]);if(r){u=r(t);for(var f=0;f<u.length;f++)i.call(t,u[f])&&(l[u[f]]=t[u[f]])}}return l}},47:function(e,n,t){"use strict";t.r(n),t.d(n,"DepthDemo",function(){return s});var r,o,i,u,l=t(30),c=t(27),a=t.n(c),f=(r=function(e,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(e,n)},function(e,n){function t(){this.constructor=e}r(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)}),p=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},s=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return f(n,e),n.prototype.render=function(){return l.createElement(l.Fragment,null,l.createElement("section",null,l.createElement("h2",{className:"lab-demo-h2"},"Sample"),l.createElement(m,null,l.createElement(y,{cssVar:"--depth-1"}),l.createElement(y,{cssVar:"--depth-2"}),l.createElement(y,{cssVar:"--depth-3"}),l.createElement(y,{cssVar:"--depth-4"}))))},n}(l.Component),y=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return f(n,e),n.prototype.render=function(){var e=this;return l.createElement(l.Fragment,null,l.createElement(h,null,this.props.cssVar),l.createElement(b,{ref:function(n){return d(e.props.cssVar,n)}}))},n}(l.Component),d=function(e,n){return n&&(n.innerHTML='<span class="square" style="box-shadow: var('+e+')"></span><span>'+getComputedStyle(document.body).getPropertyValue(e)+"</span>")},m=a.a.dl(o||(o=p(["\n  display: grid;\n  grid-template-columns: max-content max-content;\n  column-gap: 24px;\n  row-gap: 24px;\n"],["\n  display: grid;\n  grid-template-columns: max-content max-content;\n  column-gap: 24px;\n  row-gap: 24px;\n"]))),h=a.a.dt(i||(i=p(["\n  display: inline-flex;\n  align-items: center;\n"],["\n  display: inline-flex;\n  align-items: center;\n"]))),b=a.a.dd(u||(u=p(["\n  margin: 0;\n  display: inline-flex;\n  align-items: center;\n\n  .square {\n    display: inline-block;\n    margin-right: 16px;\n    border-radius: 2px;\n    width: 64px;\n    height: 64px;\n    box-sizing:  border-box;\n  }\n"],["\n  margin: 0;\n  display: inline-flex;\n  align-items: center;\n\n  .square {\n    display: inline-block;\n    margin-right: 16px;\n    border-radius: 2px;\n    width: 64px;\n    height: 64px;\n    box-sizing:  border-box;\n  }\n"])));n.default=s}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,